#!/usr/bin/perl
use strict; use warnings;
use Getopt::Long qw(GetOptions);
use File::Basename;
use lib dirname (__FILE__);
use interval_table; use cytomap; use cn_variant_table; use gene_list; 

my $version = 'dev';
my $name = 'filter.pl';

my $usage = <<"END_USAGE";

NAME                        $name
VERSION                     $version
SYNOPSIS                    Filters calls from interval tables generated by either Agilent Cytogenomics or Nexus Copy Number.
COMMAND                     $name

OPTIONS:
 -h (--help)                Prints this message.
 -i (--input) FILE          Tells the script which input file to use.
                            Optional. The script will look for ./unfiltered.txt if not specified.
                                FILE=path of exported table in tsv format
 -o (--output) FILE         Tells the script where to output the results.
                            Optional. Prints to STDOUT and ./filtered.txt if not specified.
                                FILE=path of file to export to
 -a (--gene-list-a) FILE    Tells the script which list of genes to use in the primary filter.
                            Optional. Looks for a file at ./gene_list_primary.tsv by default.
 -b (--gene-list-b) FILE    Tells the script which list of genes to use in the secondary filter.
                            Optional. Looks for a file at ./gene_list_secondary.tsv by default.
 -c (--cytoband-table) FILE Tells the script which cytoband table file to use.
                            Optional. Looks for a file at ./cytoband_hg19.txt by default.
 -v (--variant-table) FILE  Tells the script which copy number variant table file to use.
                            Optional. Looks for a file at ./known_variants.tsv by default.         
 -f (--print-full)                             

END_USAGE

# getopt vars
my $help;
my $inputFile = './data/unfiltered.txt';
my $outputFile = './data/filtered.txt';
my $gene_list_a = './data/gene_list_primary.tsv';
my $gene_list_b = './data/gene_list_secondary.tsv';
my $cytoband_table = './data/cytoband_hg19.txt';
my $cn_variant_table = './data/known_variants.tsv';
my $print_full;

GetOptions(
	'h|help' =>             \$help,
    'i|input=s' =>          \$inputFile,
    'o|output=s' =>         \$outputFile,
    'a|gene-list-a=s' =>    \$gene_list_a,
    'b|gene-list-b=s' =>    \$gene_list_b,
    'c|cytoband-table=s' => \$cytoband_table,
    'v|variant-table=s' =>  \$cn_variant_table,
    'f|print-full' =>       \$print_full
);

die $usage if $help;

my $interval_table;
my $cytomap;
my $cn_variants;
my $primary_genes;
my $secondary_genes;

# read cytoband table
{
    open my $tableIn, "<", "$cytoband_table" or die $usage."Can't open cytoband table file:\t$cytoband_table\n\n";
    $cytomap = cytomap->new();
    $cytomap->process_cytoband_table($tableIn);
    close $tableIn;
}

# read known copy number variant table
{
    open my $tableIn, "<", "$cn_variant_table" or die $usage."Can't open known copy number variant table file:\t$cn_variant_table\n\n";
    $cn_variants = cn_variant_table->new();
    $cn_variants->process_cn_variant_table($tableIn, $cytomap);
    close $tableIn;
}

# read interval table
{
    open my $tableIn, "<", "$inputFile" or die $usage."Can't open interval table file:\t$inputFile\n\n";
    $interval_table = interval_table->new();
    $interval_table->process_table($tableIn, $cytomap);
    close $tableIn;
}

# read primary gene list
{
    open my $geneListIn, "<", "$gene_list_a" or die $usage."Can't open primary gene list file:\t$gene_list_a\n\n";
    $primary_genes = gene_list->new();
    $primary_genes->process_gene_list($geneListIn);
    close $geneListIn;
}

# read secondary gene list
{
    open my $geneListIn, "<", "$gene_list_b" or die $usage."Can't open secondary gene list file:\t$gene_list_b\n\n";
    $secondary_genes = gene_list->new();
    $secondary_genes->process_gene_list($geneListIn);
    close $geneListIn;
}

# print "First-tier gene list has ".$primary_genes->get_gene_count()." genes.\n";
# print "Second-tier gene list has ".$secondary_genes->get_gene_count()." genes.\n";
# print "Cytomap has ".$cytomap->get_cytoband_count()." unique bands.\n";

$interval_table->filter_aberrations($primary_genes, $secondary_genes);
$interval_table->print_filtered($print_full);

# $cytomap->print_cytobands();