#!/usr/bin/perl
use strict; use warnings;
use Getopt::Long qw(GetOptions);
use File::Basename;
use lib dirname (__FILE__);
use interval_table; use aberration; use gene_list;

my $version = 'dev';
my $name = 'filter.pl';

my $usage = <<"END_USAGE";

NAME                    $name
VERSION                 $version
SYNOPSIS                Filters calls from interval tables generated by either Agilent Cytogenomics or Nexus Copy.
                        This tool will generate a tiered list of calls worth investigating.
COMMAND                 $name

OPTIONS:
 -h (--help)            Prints this message.
 -i (--input) FILE      Tells the script which input file to use.
                        Optional. The script will look for ./unfiltered.txt if not specified.
                            FILE=path of exported table in tsv format
 -o (--output) FILE     Tells the script where to output the results.
                        Optional. Prints to STDOUT and ./filtered.txt if not specified.
                            FILE=path of file to export to
 -g (--gene-list) FILE  Tells the script which list of genes to use in the first tier filter.
                        Optional. Looks for a file at ./gene_list.tsv by default.

END_USAGE

# getopt vars
my $help;
my $inputFile = './unfiltered.txt';
my $outputFile = './filtered.txt';
my $type = 'Agilent';
my $gene_list = './gene_list.tsv';

GetOptions(
	'h|help' =>         \$help,
    'i|input=s' =>      \$inputFile,
    'o|output=s' =>     \$outputFile,
    'g|gene-list=s' =>  \$gene_list
);

die $usage if $help;

my @tableRaw;
my @tableHeader;
my @tableBody;
my $table;
my $first_tier_genes;

# read interval table
if ($inputFile)
{
    open my $tableIn, "<", "$inputFile" or die "Can't open $inputFile\n";
    $table = interval_table->new();
    $table->process_table($tableIn);
    close $tableIn;
}

# bad input
else { die "Check that input file is valid.\n"; }

if ($gene_list)
{
    open my $geneListIn, "<", "$gene_list" or die "Can't open $gene_list\n";
    $first_tier_genes = gene_list->new();
    $first_tier_genes->process_gene_list($geneListIn);
    close $geneListIn;
}

else { die "Check that the file containing the gene list is valid.\n" }

$table->filter_aberrations($first_tier_genes);